import random


class Card(object):
    """Represents a standard playing card."""

    suit_names = ['Clubs', 'Diamonds', 'Hearts', 'Spades']
    rank_names = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King']

    def __init__(self, suit=0, rank=0):
        self.suit = suit
        self.rank = rank

    def __str__(self):
        return '{0} of {1}'.format(self.rank_names[self.rank], self.suit_names[self.suit])

    # def __cmp__(self, other):
    #     # Check suit
    #     if self.suit > other.suit:
    #         return 1
    #     if self.suit < other.suit:
    #         return -1
    #
    #     # When suit equals, check rank
    #     if self.rank > other.rank:
    #         return 1
    #     elif self.rank < other.rank:
    #         return -1
    #     else:
    #         return 0

    def __cmp__(self, other):
        t1 = self.suit, self.rank
        t2 = other.suit, other.rank
        return cmp(t1, t2)


class Deck(object):
    def __init__(self):
        self.cards = []
        for suit in xrange(4):
            for rank in xrange(13):
                card = Card(suit, rank)
                self.cards.append(card)

    def __str__(self):
        res = []
        for card in self.cards:
            res.append(str(card))
        return '\n'.join(res)

    def pop_card(self):
        return self.cards.pop()

    def add_card(self, card):
        self.cards.append(card)

    def shuffle(self):
        random.shuffle(self.cards)

    def move_cards(self, hand, num):
        for i in xrange(num):
            hand.add_card(self.pop_card())


class Hand(Deck):
    """Represents a hand of playing cards."""

    def __init__(self, label=''):
        super(Hand, self).__init__()
        self.cards = []
        self.label = label

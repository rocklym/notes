# encoding: UTF-8
from multiprocessing import Pool, Process, Queue
import os
import time
import random


def long_time_task(name):
    print 'Run task {0} ({1})'.format(name, os.getpid())
    start = time.time()
    time.sleep(random.random() * 3)
    end = time.time()
    print 'Task {0} runs {1:.2f}'.format(name, end - start)


def write(q):
    for value in ['A', 'B', 'C']:
        print 'Put {} to the queue'.format(value)
        q.put(value)
        time.sleep(random.random())


def read(q):
    while True:
        value = q.get(True)
        print 'Get {} from the queue.'.format(value)


if __name__ == '__main__':
    print 'Parent process {}'.format(os.getpid())
    p = Pool()
    for i in xrange(5):
        p.apply_async(long_time_task, args=(i,))
    print 'Waiting for all subprocess done...'
    p.close()
    p.join()
    print 'All subprocess done'

    print '######################################'
    q = Queue()
    pw = Process(target=write, args=(q,))
    pr = Process(target=read, args=(q,))
    pw.start()
    pr.start()
    pw.join()
    pr.terminate()

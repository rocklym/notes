# Flask的上下文全局变量
g, current_app：程序上下文，程序在就在
session， request：请求上下文，请求的时候在
底层都是LocalProxy

# Flask的blueprint是什么
和程序类似，也可以定义路由；蓝本中定义的路由处于休眠状态，直到注册到程序上app.register_blueprint,便于程序项目的结构化

# TCP和UDP有什么区别
1、连接和无连接
2、字节流和报文
3、点到点；1对1、N对N均可

# Nginx的作用
1、反向代理，收服务器的数据，返回给客户端
2、负载均衡，分摊流量，方式有轮询（默认）、权重、ip_hash、url_hash(第三方)、fair(第三方)
3、动静分离，静态资源缓冲，图片视频等

# 多进程、多线程、协程
1、进程是资源分配的最小单位（有独立地址），线程则是CPU调度的最小单位
2、多进程不能共享全局变量，而多线程则可以共享全局变量，
3、对于大量需要CPU工作的时候，用多进程，利用率高；而对于IO操作上（比如文件存储，网络爬虫），多线程就有巨大优势，因为不用切换cpu。
4、GIL，2用计数器，3用计时器；python里一个进程永远只能同时执行一个线程(拿到GIL的线程才能执行)，相对而言Python在CPU密集型程序中多线程不如多进程效率高
